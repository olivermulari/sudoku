{"version":3,"sources":["assets/img/notes.png","components/GameSelect.js","scripts/check.js","scripts/options.js","scripts/emptyTiles.js","scripts/generator.js","components/Note.js","components/Tile.js","components/ButtonTile.js","components/OptionsRow.js","components/HoverBoard.js","components/Board.js","scripts/difficulty.js","components/Game.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","GameSelect","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startEasyGame","startGame","startMediumGame","startHardGame","startExtremeGame","difficulty","easy","medium","hard","extreme","react_default","a","createElement","id","className","onClick","React","Component","isFilled","board","flat","filter","val","length","isValid","rowsValid","every","row","arrayIsValid","colsValid","arr","i","push","getColumn","getColumns","col","boxesValid","getBox","getBoxes","box","oneDuplicate","value","noZeros","Array","from","Set","map","x","y","r","c","options","rowArr","splice","colArr","boxArr","boxIndex","concat","forbiddenValues","removeValues","amount","Math","floor","removeRandomValue","removeEasiestValue","removeValuesPerRow","removeExistingValueFromRow","console","log","existingValues","ri","random","colI","indexOf","removeValueFrom","copy","fill","sorted","sort","l","removable","toRemove","generate","SudokuCreate","maxNum","iterations","numSet","sudokuArray","horizontalBoxSize","verticalBoxSize","placeNumber","num","randomSafeIndex","lastRowIndex","lastRow","rowsToCheck","safeIndexes","horizontalBoxesUsed","horizontalBox","undefined","boxesUsed","boxSafe","index","indexBox","indexInLastRow","rowLen","columnSafe","rowIndex","max","findSafeIndex","workingArray","shift","Note","values","_this2","notes","includes","Tile","displayOptions","state","isStatic","onDisplayOptions","isSelected","static","pStyle","cursor","margin","position","top","left","transform","class","confiqClassName","style","enableNotes","src_components_Note","ButtonTile","toggleHover","setState","hover","renderHover","linkStyle","color","backgroundColor","button","setValue","assign","onMouseOver","onMouseOut","selected","width","height","borderRadius","OptionsRow","figureTileColor","selectedIsNull","selectedValue","selectedNotes","border","tiles","src_components_ButtonTile","key","HoverBoard","figureActiveRow","figureActiveCol","figureActiveBox","classCh","classRow","classCol","Board","mapStaticBoard","toggleNoteWrite","writingNotes","showOptions","tile","newNotes","prevNotes","newBoard","check","setBoard","incorrectTiles","init","setGameState","correct","checkAllTiles","filled","isOK","checkTile","rowValid","colValid","boxValid","tileIsValid","updateIncorrectTiles","incorrectIndex","findIndex","tileHelper","right","bottom","borderWidth","borderStyle","borderColor","confiqColor","confiqBorders","_this3","src","noteIcon","alt","notesButton","src_components_Tile","confiqHelperClass","getTileStyle","tileSize","size","components_HoverBoard","components_OptionsRow","Game","isCorrect","isCompleted","gameStyle","background","headerStyle","textAlign","src_components_Board","App","gameStarted","newGame","toggleEnableNotes","toggleTileHelper","showGame","components_Game","components_GameSelect","marginTop","type","checked","ReactDOM","render","src_App_0","document","getElementById","vh","window","innerHeight","documentElement","setProperty","addEventListener","applyFullWindowHeight"],"mappings":"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","file":"static/js/main.caa5340b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notes.14f79431.png\";","import React from 'react';\nimport '../App.css';\n\nclass GameSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.difficulty = {\n            easy: 'easy',\n            medium: 'medium',\n            hard: 'hard',\n            extreme: 'extreme'\n        }\n    }\n\n    startEasyGame = () => {\n        this.props.startGame('easy')\n    }\n\n    startMediumGame = () => {\n        this.props.startGame('medium')\n    }\n\n    startHardGame = () => {\n        this.props.startGame('hard')\n    }\n\n    startExtremeGame = () => {\n        this.props.startGame('extreme')\n    }\n\n    render() {\n        return (\n            <div id=\"game-select\" className=\"noselect\">\n                <button onClick={this.startEasyGame}>Easy</button>\n                <button onClick={this.startMediumGame}>Medium</button>\n                <button onClick={this.startHardGame}>Hard</button>\n                <button onClick={this.startExtremeGame}>Extreme</button>\n            </div>\n        )\n    }\n}\n\nexport default GameSelect;","export function isComplete(board) {\n    return board.flat().filter((val) => val !== 0).length === 81 && isValid(board);\n}\n\nexport function isFilled(board) {\n    return board.flat().filter((val) => val !== 0).length === 81;\n}\n\nexport function isValid(board) {\n    const rowsValid = board.every((row) => arrayIsValid(row));\n    const colsValid = getColumns(board).every((col) => arrayIsValid(col));\n    const boxesValid = getBoxes(board).every((box) => arrayIsValid(box));\n    return rowsValid && colsValid && boxesValid;\n}\n\nexport function tileIsValid(board, row, col) {\n    const value = board[row - 1][col - 1];\n    const rowValid = oneDuplicate(board[row - 1], value);\n    const colValid = oneDuplicate(getColumn(board, col), value);\n    const boxValid = oneDuplicate(getBox(board, row, col), value);\n    return rowValid && colValid && boxValid;\n}\n\nfunction oneDuplicate(arr, value) {\n    return arr.filter((val) => val === value).length === 1;\n}\n\nfunction arrayIsValid(arr) {\n    const noZeros = arr.filter((val) => val !== 0);\n    return Array.from(new Set(noZeros)).length === noZeros.length;\n}\n\nfunction getColumns(board) {\n    const arr = [];\n    for (let i = 1; i <= 9; i++) {\n        arr.push(getColumn(board, i));\n    }\n    return arr;\n}\n\nexport function getColumn(board, col) {\n    return board.map((row) => row[col - 1]);\n}\n\nfunction getBoxes(board) {\n    const arr = [];\n    for (let row = 1; row <= 9; row += 3) {\n        for (let col = 1; col <= 9; col += 3) {\n            arr.push(getBox(board, row, col));\n        }\n    }\n    return arr;\n}\n\nexport function getBox(board, row, col) {\n    const arr = [];\n    for (let x = 0; x < 3; x++) {\n        for (let y = 0; y < 3; y++) {\n            const r = (row - 1 - (row - 1) % 3) + x;\n            const c = (col - 1 - (col - 1) % 3) + y;\n            arr.push(board[r][c]);\n        }\n    }\n    return arr;\n}\n","import { getBox, getColumn } from './check.js';\n\nexport function options(board, row, col) {\n\n    const options = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n    const rowArr = Array.from(board[row - 1]);\n    rowArr.splice(col - 1, 1);\n\n    const colArr = getColumn(board, col);\n    colArr.splice(row - 1, 1);\n\n    const boxArr = getBox(board, row, col);\n    const boxIndex = ((row - 1) % 3) * 3 + ((col - 1) % 3);\n    boxArr.splice(boxIndex, 1);\n\n    const forbiddenValues = (val) => Array.from(new Set(rowArr.concat(colArr).concat(boxArr))).every((x) => x !== val);\n\n    return options.filter(val => forbiddenValues(val));\n}","import { options } from './options.js';\n\nexport function removeValues(board, amount) {\n    const r = Math.floor(amount / 2);\n\n    // First remove tiles randomly\n    for (let i = 0; i < r; i++) {\n        removeRandomValue(board);\n    }\n\n    // Then remove the tile with fewest options\n    for (let i = 0; i < amount - r; i++) {\n        removeEasiestValue(board);\n    }\n}\n\nexport function removeValuesPerRow(board, amount) {\n    if (amount > 0 && amount < 9) {\n        for (let i = 1; i <= 9; i++) {\n            removeExistingValueFromRow(board, i)\n        }\n        removeValuesPerRow(board, amount - 1)\n    } else {\n        console.log(\"tried to remove too many values\")\n    }\n}\n\n// beacuse sudoku is valid, evry number exist only once in a row\nfunction removeExistingValueFromRow(board, row) {\n    const existingValues = board[row - 1].filter((val) => val !== 0);\n    if (existingValues.length > 0) {\n        const ri = Math.floor(Math.random() * existingValues.length); // random index\n        const colI = board[row - 1].indexOf(existingValues[ri])\n        board[row - 1][colI] = 0;\n    }\n}\n\nfunction removeRandomValue(board) {\n    const col = Math.floor(Math.random() * 9 + 1);\n    const row = Math.floor(Math.random() * 9 + 1);\n    removeValueFrom(board, row, col);\n}\n\nfunction removeEasiestValue(board) {\n\n    const copy = Array(9).fill(Array(9).fill(0));\n\n    for (let r = 1; r <= 9; r++) {\n        for (let c = 1; c <= 9; c++) {\n            if (board[r - 1][c - 1] !== 0) {\n                copy[r - 1][c - 1] = [r, c, options(board, r, c)];\n            }\n        }\n    }\n\n    const sorted = copy.flat().filter((x) => x !== 0)\n                      .sort((l, r) => l[2].length - r[2].length);\n    if (sorted[0]) {\n        const removable = sorted.filter((x) => x[2].length === sorted[0][2].length);\n        const rand = Math.floor(Math.random() * removable.length);\n        const toRemove = removable[rand];\n        removeValueFrom(board, toRemove[0], toRemove[1]);\n    }\n}\n\nfunction removeValueFrom(board, row, col) {\n    board[row - 1][col - 1] = 0;\n}","export function generate() {\n    return SudokuCreate(9, 0);\n}\n\nfunction SudokuCreate(maxNum, iterations) {\n    //generate number set\n    let numSet = [];\n    let sudokuArray = [];\n\n    //populates number set and files sudoku with the rows and columns it needs\n    for (let i = 1; i <= maxNum; ++i) {\n        numSet.push(i);\n        sudokuArray.push(new Array(maxNum));\n    }\n\n    //size of sub boxes, figure out more dynamic way to set this\n    let horizontalBoxSize = 3,\n        verticalBoxSize = maxNum === 9 ? 3 : 2;\n\n    //find random number from 0 to max number, expludes max\n    function getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n    }\n\n    //places numbers in the sudoku array\n    function placeNumber(num, arr) {\n        let lastRowIndex = arr.length - 1, //the index of the last row in the working array\n            lastRow = arr[lastRowIndex], //the reference to the last row\n            rowsToCheck = lastRowIndex % verticalBoxSize, //find what row of the sub box we are in vertically\n            safeIndexes = [], //find which column is save to put a number in to\n            randomSafeIndex; //pick one of the columns to place the number into from the safeIndexes array\n\n        //used to find a safe column to place the number in the current row\n        function findSafeIndex(boxesUsed) {\n            //looks at previous rows if inside the sub box to see if the current number can be placed in the sub box\n            function boxSafe(index) {\n                let indexBox = Math.floor(index / horizontalBoxSize);//finds which sub box the current index is in\n                if (boxesUsed.indexOf(indexBox) >= 0) {//checks to see if the current index's sub box has already been used\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n\n            //loop through the current row to find a safe place to put the number\n            for (let indexInLastRow = 0, rowLen = lastRow.length; indexInLastRow < rowLen; ++indexInLastRow) {\n                let columnSafe = true; //assume the current column is safe\n\n                //make sure the current number isn't already used in this column\n                for (let rowIndex = arr.length - 1; rowIndex >= 0; --rowIndex) {\n                    if(arr[rowIndex][indexInLastRow] === num) {\n                        columnSafe = false;\n                    }\n                }\n\n                //make sure current index is empty, column is safe, and that current box is safe\n                if(lastRow[indexInLastRow] === undefined && columnSafe && boxSafe(indexInLastRow)) {\n                    safeIndexes.push(indexInLastRow);\n                }\n            }\n\n            //return a safe index to be used for the current number\n            return safeIndexes[getRandomInt(safeIndexes.length)];\n        }\n\n        let horizontalBoxesUsed = []; //records which sub box has been used, in the current sub box row\n\n        //if we are not if the first row of the sub box, loop through the other rows to see which subboxes have been used\n        if (rowsToCheck > 0) {\n            for (let i = rowsToCheck; i > 0; --i) {\n                let horizontalBox = Math.floor(arr[lastRowIndex - i].indexOf(num) / horizontalBoxSize);\n                horizontalBoxesUsed.push( horizontalBox );\n            }\n        }\n\n        //get a safe index to put the number in to the row\n        randomSafeIndex = findSafeIndex(horizontalBoxesUsed);\n\n        //if there are no safe indexs return the number\n        if(randomSafeIndex === undefined) {\n            return num;\n        } else {//else if there are safe indexs add the number to an index in the row and return true\n            lastRow[randomSafeIndex] = num;\n            return true;\n        }\n    }\n\n    //loop through the numbers to set them in the sudoku\n    for (let i = numSet.length - 1; i >= 0; --i) {\n        let workingArray = [];//holds the rows we are currently working with and/or have already wored with\n        let possible = true;//is the sudoku even possible?\n        while (sudokuArray.length > 0) {//while there are rows in the sudokuArray have have been been processed keep looping\n            workingArray.push(sudokuArray.shift());//add a row to the working array from the sudoku array\n\n            possible = placeNumber(numSet[i], workingArray);//place the current working number in to the working array, to find out if the sudoku puzzle is possible\n\n            if (possible !== true) {//if its not possible generate a new sudoku puzzle\n                return SudokuCreate(maxNum, iterations + 1);\n            }\n        }\n\n        //make the sudoku array equal to the working array when we're done\n        sudokuArray = workingArray;\n    }\n\n    console.log(\"Sudoku created in \" + iterations + \" iterations\")\n    return sudokuArray;//return our array to start to do some sudoku\n}","import React from 'react';\nimport './Tile.css';\nimport './Note.css';\n\nclass Note extends React.Component {\n  constructor(props) {\n    super(props)\n    this.values = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  }\n\n  render() {\n    return (\n      <div className=\"note\">\n        {this.values.map((val) => {\n          if (this.props.notes.includes(val)) {\n            return <p className=\"noselect\">{val}</p>\n          } else {\n            return <p></p>\n          }\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Note;","import React from 'react';\nimport './Tile.css';\nimport Note from './Note'\n\nclass Tile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.row = this.props.id[0]\n    this.col = this.props.id[1]\n    this.state = {\n      isStatic: this.props.static[this.row - 1][this.col - 1],\n      pStyle: {\n        cursor: this.props.static[this.row - 1][this.col - 1] ? 'default' : 'pointer',\n        margin: 0,\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n    }\n  }\n  \n  // Options bar to select tiles value\n  displayOptions = () => {\n    if (!this.state.isStatic) {\n      this.props.onDisplayOptions(this.props.id, this.props.isSelected)\n    }\n  }\n\n  confiqClassName() {\n    if (this.state.isStatic || this.props.value === 0) {\n      return 'tile'\n    } else {\n      return 'tile ' + this.props.class\n    }\n  }\n\n  render() {\n    const inside = () => {\n      if (this.props.enableNotes && this.props.value === 0) {\n        return (\n          <Note id={this.props.id} notes={this.props.notes}/>\n        )\n      } else {\n        return (\n          <p className=\"noselect\" style={this.state.pStyle}>{\n            this.props.value === 0 ? '' : this.props.value\n          }</p>\n        )\n      }\n    }\n\n    return (\n      <div \n        className={this.confiqClassName()}\n        onClick={this.displayOptions}\n        // combinign two style objects into a new empty object\n        style={this.props.style}>\n        { inside() }\n      </div>\n    )\n  }\n}\n\nexport default Tile;","import React from 'react';\nimport './ButtonTile.css';\nimport './Tile.css';\n\nclass ButtonTile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.value = this.props.value;\n        this.pStyle = {\n            cursor: 'pointer',\n            margin: 0,\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)'\n        }\n        this.state = {\n            hover: false,\n            style: {\n                width: `${30}px`,\n                height: `${30}px`,\n                borderRadius: '3px'\n            }\n        }\n    }\n\n    toggleHover = () => {\n        this.setState({hover: !this.state.hover})\n    }\n\n    renderHover = () => {\n        let linkStyle = this.props.color;\n        if (this.state.hover) {\n          linkStyle = {backgroundColor: 'white', color: 'black'}\n        }\n        return linkStyle\n    }\n\n    button = () => (\n        <div\n        onClick={this.setValue}\n        className=\"tile-button\"\n        style={Object.assign({}, this.state.style, this.renderHover())}\n        onMouseOver={this.toggleHover} \n        onMouseOut={this.toggleHover}>\n            <p className=\"noselect\" style={this.pStyle}>{this.value}</p>\n        </div>\n    );\n\n    setValue = () => {\n        this.props.setValue(this.value, this.props.selected)\n    }\n\n    render() {\n        return this.button()\n    }\n}\n\nexport default ButtonTile;","import React from \"react\";\nimport ButtonTile from \"./ButtonTile\";\n\nclass OptionsRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.style = {\n      margin: \"15px auto 0 auto\",\n      backgroundColor: \"rgb(255, 255, 255)\",\n      width: `${30 * 9 + 2}px`,\n      height: `${30 + 2}px`,\n      border: \"1px white solid\"\n    };\n  }\n\n  setValue = (value, selected) => {\n    this.props.setValue(value, selected);\n  };\n\n  figureTileColor = val => {\n    const selectedIsNull = this.props.selectedValue === 0;\n    const isNote = this.props.selectedNotes.includes(val);\n    return isNote && selectedIsNull ? \"rgb(22, 237, 245)\" : \"\";\n  };\n\n  render() {\n    let id = 0;\n    return (\n      <div style={this.style}>\n        {this.props.tiles.map(num => {\n          if (id === 9) id = 0;\n          id++;\n          return (\n            <ButtonTile\n              id={[this.props.id, id]}\n              key={[this.props.id, id]}\n              selected={this.props.selected}\n              selectedValue={this.props.selectedValue}\n              color={{ backgroundColor: this.figureTileColor(id) }}\n              value={num}\n              setValue={this.setValue}/>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default OptionsRow;\n","import React from 'react';\nimport './Board.css';\n\n// The board on to of the board\n\nclass HoverBoard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.arr = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n    }\n\n    figureActiveRow = () => {\n      return this.props.selected[0] - 1\n    }\n\n    figureActiveCol = () => {\n      return this.props.selected[1] - 1\n    }\n\n    figureActiveBox = () => {\n      const row = Math.floor((this.props.selected[0] - 1) / 3)\n      const col = Math.floor((this.props.selected[1] - 1) / 3)\n      return col + 3 * row\n    }\n  \n    render() {\n        const classCh = (x) => x === this.figureActiveBox() ? \"hb hb-chunck\" : \"\"\n        const classRow = (x) => x === this.figureActiveRow() ? \"hb hb-row\" : \"\"\n        const classCol = (x) => x === this.figureActiveCol() ? \"hb hb-col\" : \"\"\n\n        return (\n          <div>\n            <div className=\"hoverboard hoverboard-row\">\n              {\n                this.arr.map(x => {\n                  return (\n                    <div style={{position: \"relative\"}} key={x}>\n                      <div className={classRow(x)}></div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n            <div className=\"hoverboard hoverboard-col\">\n              {\n                this.arr.map(x => {\n                  return (\n                    <div style={{position: \"relative\"}} key={x}>\n                      <div className={classCol(x)}></div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n            <div className=\"hoverboard hoverboard-box\">\n              {\n                this.arr.map(x => {\n                  return (\n                    <div style={{position: \"relative\"}} key={x}>\n                      <div className={classCh(x)}></div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default HoverBoard;","import React from 'react';\nimport { setBoard } from '../scripts/difficulty';\nimport Tile from './Tile';\nimport OptionsRow from './OptionsRow';\nimport HoverBoard from './HoverBoard';\nimport './Board.css';\nimport { isFilled, tileIsValid, isValid } from '../scripts/check.js';\n\nimport noteIcon from '../assets/img/notes.png';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.board = setBoard(this.props.difficulty);\n        this.static = this.mapStaticBoard(this.board);\n        this.state = {\n            tiles: this.board,\n            notes: this.board.map((row) => row.map((val) => [])),\n            selected: [0, 0],\n            incorrectTiles : [],\n            showOptions: false,\n            writingNotes: false,\n        }\n        this.init()\n    }\n\n    init() {\n        // check initially if game happens to be correct\n        this.props.setGameState(isValid(this.state.tiles), isFilled(this.state.tiles))\n    }\n\n    mapStaticBoard = (arr) => {\n        const newArr = arr.map((row) => row.map((val) => val !== 0));\n        return newArr;\n    }\n\n    toggleNoteWrite = () => {\n        this.setState({ writingNotes: !this.state.writingNotes })\n    }\n\n    // double click sets value to 0\n    displayOptions = (id, isSelected) => {\n        this.setState({\n            showOptions: !isSelected,\n            selected: id\n        }, () => {\n            if (isSelected) {\n                this.setValue(0, id);\n            }\n        })\n    }\n\n    setValue = (value, tile) => {\n        if (!this.isSelected(0, 0)) {\n            if (this.state.writingNotes) {\n                const newNotes = this.state.notes;\n                const prevNotes = this.state.notes[tile[0] - 1][tile[1] - 1];\n                if (prevNotes.includes(value)) {\n                    newNotes[tile[0] - 1][tile[1] - 1].splice(prevNotes.indexOf(value), 1);\n                } else {\n                    newNotes[tile[0] - 1][tile[1] - 1].push(value);\n                }\n                this.setState({notes: newNotes})\n            } else {\n                const newBoard = this.state.tiles;\n                newBoard[tile[0] - 1][tile[1] - 1] = value;\n                this.setState({\n                    showOptions: false,\n                    selected: [0, 0],\n                    tiles: newBoard\n                }, () => {\n                    this.check(tile)\n                })\n            }\n        }\n    }\n\n    check() {\n        const correct = this.checkAllTiles()\n        const filled = isFilled(this.state.tiles)\n        this.props.setGameState(correct, filled)\n    }\n\n    checkAllTiles() {\n        let correct = true;\n        for (let row = 1; row <= 9; row++) {\n            for (let col = 1; col <= 9; col++) {\n                if (!this.static[row - 1][col - 1] \n                &&   this.state.tiles[row - 1][col - 1] !== 0) {\n\n                    const isOK = this.checkTile([row, col])\n                    if (!isOK) correct = isOK\n                }\n            }\n        }\n        return correct;\n    }\n\n    checkTile(tile) {\n        const isOK = tileIsValid(this.state.tiles, tile[0], tile[1])\n        this.updateIncorrectTiles(tile, !isOK)\n        return isOK;\n    }\n\n    updateIncorrectTiles(tile, push) {\n        const index = this.incorrectIndex(tile[0], tile[1])\n        if (push) {\n            if (index === -1) {\n                this.state.incorrectTiles.push(tile)\n            }\n        } else {\n            if (index !== -1) {\n                this.state.incorrectTiles.splice(index, 1)\n            }\n        }\n    }\n\n    // returns -1 if is not in incorrect tiles\n    incorrectIndex(row, col) {\n        return this.state.incorrectTiles.findIndex((x) => x[0] === row && x[1] === col)\n    }\n\n    isSelected(row, col) {\n        return this.state.selected[0] === row && this.state.selected[1] === col\n    }\n\n    confiqColor(row, col) {\n        const selectedColor = () => this.isSelected(row, col) ? 'rgb(22, 237, 245)' : '' // no property\n        const staticColor = () => this.static[row - 1][col - 1] ? 'rgb(230, 230, 230)' : selectedColor()\n        return staticColor()\n    }\n\n    confiqHelperClass(row, col) {\n        if (this.props.tileHelper) {\n            return this.incorrectIndex(row, col) === -1 ? 'correct-tile' : 'incorrect-tile'\n        } else {\n            return '';\n        }\n    }\n\n    confiqBorders(row, col) {\n        const top = row % 3 === 1 ? 'black' : '#ccc'\n        const right = col % 3 === 0 ? 'black' : '#ccc'\n        const bottom = row % 3 === 0 ? 'black' : '#ccc'\n        const left = col % 3 === 1 ? 'black' : '#ccc'\n        const borderObj = {\n            borderWidth: '1px',\n            borderStyle:  'solid',\n            borderColor:  `${top} ${right} ${bottom} ${left}`\n        }\n        return borderObj\n    }\n\n    getTileStyle(row, col) {\n        const style = {\n            backgroundColor: this.confiqColor(row, col),\n            cursor: this.static[row - 1][col - 1] ? 'default' : 'pointer',\n        }\n        return Object.assign(style, this.confiqBorders(row, col));\n    }\n  \n    render() {\n        let row = 1;\n        let col = 0;\n        const board = () =>\n            <div id=\"board\"> {\n                this.state.tiles.flat().map((value) => {\n                    if (col === 9) {\n                        col = 0;\n                        row++;\n                    }\n                    col++;\n                    return (\n                        <Tile \n                        id={[row, col]}\n                        key={[row, col]}\n                        class={this.confiqHelperClass(row, col)}\n                        style={this.getTileStyle(row, col)}\n                        static={this.static}\n                        isSelected={this.isSelected(row, col)}\n                        onDisplayOptions={this.displayOptions}\n                        enableNotes={this.props.enableNotes}\n                        notes={this.state.notes[row - 1][col - 1]}\n                        value={value}\n                        tileSize={this.state.size}/>\n                    )\n                })\n            }\n                <HoverBoard \n                selected={this.state.selected}/>\n            </div>\n\n        const options = () => {\n            if (this.state.writingNotes || this.state.showOptions) {\n                const notes = () => this.state.selected[0] !== 0 ? this.state.notes[this.state.selected[0] - 1][this.state.selected[1] - 1] : [];\n                const selectedVal = () => this.state.selected[0] !== 0 ? this.state.tiles[this.state.selected[0] - 1][this.state.selected[1] - 1] : null;\n                return (\n                    <div>\n                        <OptionsRow\n                        id={10}\n                        key={10}\n                        setValue={this.setValue}\n                        selected={this.state.selected}\n                        selectedValue={selectedVal()}\n                        selectedNotes={notes()}\n                        writingNotes={this.state.writingNotes}\n                        tiles={[1, 2, 3, 4, 5, 6, 7, 8, 9]}/>\n                    </div>\n                )\n            }\n        }\n\n        const notesButton = () => {\n            const color = () => this.state.writingNotes ? {backgroundColor: 'rgb(22, 237, 245)'} : {backgroundColor: 'white'}\n            if (this.props.enableNotes) {\n                return (\n                    <button style={Object.assign({}, {position: 'relative', top: '0', width: '30px', height: '30px'}, color())}\n                        onClick={this.toggleNoteWrite}>\n                        <img src={noteIcon} style={{width: '100%'}} alt=\"Notes\" />\n                    </button>\n                )\n            }\n        }\n\n        const buttonRow = () => {\n            return (\n                <div id=\"button-row\" style={{height: '30px'}}>\n                    {notesButton()}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"container\">\n                {buttonRow()}\n                {board()}\n                {options()}\n            </div>\n        )\n    }\n}\n\nexport default Board;\n","import { removeValues, removeValuesPerRow } from './emptyTiles';\nimport { generate } from './generator';\n\nexport function setBoard(difficulty) {\n    console.log(`Started ${difficulty} game`)\n\n    const board = generate();\n\n    removeValuesPerRow(board, 2);\n    \n    switch (difficulty) {\n        case 'easy':\n            break;\n        case 'medium':\n            removeValuesPerRow(board, 1);\n            removeValues(board, 10);\n            break;\n        case 'hard':\n            removeValues(board, 35);\n            break;\n        case 'extreme':\n            removeValues(board, 50);\n            break;\n        default:\n            break;\n    }\n    \n    return board;\n}","import React from \"react\";\nimport \"../App.css\";\nimport Board from \"./Board\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCorrect: true,\n      isFilled: false,\n      isCompleted: false,\n      difficulty: this.props.difficulty\n    };\n    this.headerStyle = {\n      color: \"white\",\n      textAlign: \"center\"\n    };\n  }\n\n  setGameState = (isCorrect, isFilled) => {\n    this.setState(\n      {\n        isCorrect: isCorrect,\n        isFilled: isFilled\n      },\n      () => {\n        this.setState({\n          isCompleted: this.state.isCorrect && this.state.isFilled\n        });\n      }\n    );\n  };\n\n  gameStyle = () => {\n    if (this.state.isFilled) {\n      if (this.state.isCompleted) {\n        return { background: \"green\" };\n      } else {\n        return { background: \"red\" };\n      }\n    } else {\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"sudoku-game\" style={this.gameStyle()}>\n        <h1 style={this.headerStyle}>\n          {this.state.isFilled\n            ? this.state.isCompleted\n              ? \"Completed!\"\n              : \"Try again!\"\n            : \"Sudoku\"}\n        </h1>\n        <Board\n          tileHelper={this.props.tileHelper}\n          enableNotes={this.props.enableNotes}\n          difficulty={this.props.difficulty}\n          setGameState={this.setGameState}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\nimport GameSelect from './components/GameSelect';\nimport Game from './components/Game';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tileHelper: false,\n      enableNotes: false,\n      gameStarted: false,\n      difficulty: 'init',\n      showOptions: false,\n    }\n  }\n\n  /* problem migth be that this doesn't actually start the game but\n  *  changes app state\n  *  \n  */\n  startGame = (difficulty) => {\n    this.setState({\n      gameStarted: true,\n      difficulty: difficulty\n    })\n  }\n\n  newGame = () => {\n    this.setState({\n      gameStarted: false,\n      showOptions: false\n    })\n  }\n\n  toggleEnableNotes = () => {\n    const state = this.state.enableNotes\n    this.setState({enableNotes: !state})\n  }\n\n  toggleTileHelper = () => {\n    const state = this.state.tileHelper\n    this.setState({tileHelper: !state})\n  }\n\n  showOptions = () => {\n    this.setState({showOptions: true})\n  }\n\n  showGame = () => {\n    this.setState({showOptions: false})\n  }\n  \n  render() {\n    const game = () => {\n      if (this.state.gameStarted) {\n        return (\n          <Game\n          tileHelper={this.state.tileHelper}\n          enableNotes={this.state.enableNotes}\n          difficulty={this.state.difficulty}/>\n        )\n      } else {\n        return (\n          <GameSelect startGame={this.startGame}/>\n        )\n      }\n    }\n\n    const options = () => {\n      if (this.state.showOptions) {\n        return (\n          <div id=\"settings-page\">\n            <div id=\"settings\">\n              <div style={{marginTop: '150px'}}>\n                <p>Tile Helper: </p>\n                <input type=\"checkbox\" id=\"tile-helper\" checked={this.state.tileHelper} onClick={this.toggleTileHelper}/>\n              </div>\n              <div>\n                <p>Enable notes: </p>\n                <input type=\"checkbox\" id=\"enable-notes\" checked={this.state.enableNotes} onClick={this.toggleEnableNotes}/>\n              </div>\n              <button onClick={this.newGame}>Start New Game</button>\n            </div>\n          </div>\n        )\n      } else {\n        return;\n      }\n    }\n\n    const navBar = () => {\n      return (\n        <ul id=\"nav-bar\">\n          <li onClick={this.showGame}><h3 className=\"noselect\">Game</h3></li>\n          <p></p>\n          <p></p>\n          <li onClick={this.showOptions}><h3 className=\"noselect\">Options</h3></li>\n        </ul>\n      )\n    }\n\n    return (\n      <div id=\"app\">\n        {game()}\n        {options()}\n        {navBar()}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\napplyFullWindowHeight();\n\nfunction applyFullWindowHeight() {\n    const vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n    window.addEventListener('resize', () => {\n      const vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty('--vh', `${vh}px`);\n    });\n}\n"],"sourceRoot":""}