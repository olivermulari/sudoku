{"version":3,"sources":["assets/img/notes.png","components/GameSelect.js","scripts/check.js","scripts/options.js","scripts/emptyTiles.js","scripts/generator.js","components/Note.js","components/Tile.js","components/ButtonTile.js","components/OptionsRow.js","components/Board.js","scripts/difficulty.js","components/Game.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","GameSelect","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startEasyGame","startGame","startMediumGame","startHardGame","startExtremeGame","difficulty","easy","medium","hard","extreme","react_default","a","createElement","id","className","onClick","React","Component","isFilled","board","flat","filter","val","length","isValid","rowsValid","every","row","arrayIsValid","colsValid","arr","i","push","getColumn","getColumns","col","boxesValid","getBox","getBoxes","box","oneDuplicate","value","noZeros","Array","from","Set","map","x","y","r","c","options","rowArr","splice","colArr","boxArr","boxIndex","concat","forbiddenValues","removeValues","amount","Math","floor","removeRandomValue","removeEasiestValue","removeValuesPerRow","removeExistingValueFromRow","console","log","existingValues","ri","random","colI","indexOf","removeValueFrom","copy","fill","sorted","sort","l","removable","toRemove","generate","SudokuCreate","maxNum","iterations","numSet","sudokuArray","horizontalBoxSize","verticalBoxSize","placeNumber","num","randomSafeIndex","lastRowIndex","lastRow","rowsToCheck","safeIndexes","horizontalBoxesUsed","horizontalBox","undefined","boxesUsed","boxSafe","index","indexBox","indexInLastRow","rowLen","columnSafe","rowIndex","max","findSafeIndex","workingArray","shift","Note","values","_this2","notes","includes","Tile","toggleHover","setState","hover","state","toggleActive","active","toggleFocus","focus","renderHover","isStatic","linkStyle","backgroundColor","style","displayOptions","onDisplayOptions","isSelected","static","pStyle","cursor","margin","position","top","left","transform","class","confiqClassName","assign","onMouseOver","onMouseOut","onMouseUp","onMouseDown","onFocus","enableNotes","src_components_Note","ButtonTile","color","button","setValue","selected","width","size","height","borderRadius","OptionsRow","figureTileColor","selectedIsNull","selectedValue","selectedNotes","tileSize","border","tiles","src_components_ButtonTile","key","Board","mapStaticBoard","toggleNoteWrite","writingNotes","showOptions","tile","newNotes","prevNotes","newBoard","check","setBoard","incorrectTiles","init","setGameState","correct","checkAllTiles","filled","isOK","checkTile","rowValid","colValid","boxValid","tileIsValid","updateIncorrectTiles","incorrectIndex","findIndex","tileHelper","right","bottom","borderWidth","borderStyle","borderColor","confiqColor","confiqBorders","_this3","src_components_Tile","confiqHelperClass","getTileStyle","src","noteIcon","alt","notesButton","components_OptionsRow","Game","isCorrect","isCompleted","gameStyle","background","headerStyle","textAlign","src_components_Board","App","gameStarted","toggleEnableNotes","toggleTileHelper","type","components_Game","components_GameSelect","ReactDOM","render","src_App_0","document","getElementById","vh","window","innerHeight","documentElement","setProperty","addEventListener","applyFullWindowHeight"],"mappings":"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","file":"static/js/main.0eea0b4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notes.14f79431.png\";","import React from 'react';\nimport '../App.css';\n\nclass GameSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.difficulty = {\n            easy: 'easy',\n            medium: 'medium',\n            hard: 'hard',\n            extreme: 'extreme'\n        }\n    }\n\n    startEasyGame = () => {\n        this.props.startGame('easy')\n    }\n\n    startMediumGame = () => {\n        this.props.startGame('medium')\n    }\n\n    startHardGame = () => {\n        this.props.startGame('hard')\n    }\n\n    startExtremeGame = () => {\n        this.props.startGame('extreme')\n    }\n\n    render() {\n        return (\n            <div id=\"game-select\" className=\"noselect\">\n                <button onClick={this.startEasyGame}>Easy</button>\n                <button onClick={this.startMediumGame}>Medium</button>\n                <button onClick={this.startHardGame}>Hard</button>\n                <button onClick={this.startExtremeGame}>Extreme</button>\n            </div>\n        )\n    }\n}\n\nexport default GameSelect;","export function isComplete(board) {\n    return board.flat().filter((val) => val !== 0).length === 81 && isValid(board);\n}\n\nexport function isFilled(board) {\n    return board.flat().filter((val) => val !== 0).length === 81;\n}\n\nexport function isValid(board) {\n    const rowsValid = board.every((row) => arrayIsValid(row));\n    const colsValid = getColumns(board).every((col) => arrayIsValid(col));\n    const boxesValid = getBoxes(board).every((box) => arrayIsValid(box));\n    return rowsValid && colsValid && boxesValid;\n}\n\nexport function tileIsValid(board, row, col) {\n    const value = board[row - 1][col - 1];\n    const rowValid = oneDuplicate(board[row - 1], value);\n    const colValid = oneDuplicate(getColumn(board, col), value);\n    const boxValid = oneDuplicate(getBox(board, row, col), value);\n    return rowValid && colValid && boxValid;\n}\n\nfunction oneDuplicate(arr, value) {\n    return arr.filter((val) => val === value).length === 1;\n}\n\nfunction arrayIsValid(arr) {\n    const noZeros = arr.filter((val) => val !== 0);\n    return Array.from(new Set(noZeros)).length === noZeros.length;\n}\n\nfunction getColumns(board) {\n    const arr = [];\n    for (let i = 1; i <= 9; i++) {\n        arr.push(getColumn(board, i));\n    }\n    return arr;\n}\n\nexport function getColumn(board, col) {\n    return board.map((row) => row[col - 1]);\n}\n\nfunction getBoxes(board) {\n    const arr = [];\n    for (let row = 1; row <= 9; row += 3) {\n        for (let col = 1; col <= 9; col += 3) {\n            arr.push(getBox(board, row, col));\n        }\n    }\n    return arr;\n}\n\nexport function getBox(board, row, col) {\n    const arr = [];\n    for (let x = 0; x < 3; x++) {\n        for (let y = 0; y < 3; y++) {\n            const r = (row - 1 - (row - 1) % 3) + x;\n            const c = (col - 1 - (col - 1) % 3) + y;\n            arr.push(board[r][c]);\n        }\n    }\n    return arr;\n}\n","import { getBox, getColumn } from './check.js';\n\nexport function options(board, row, col) {\n\n    const options = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n    const rowArr = Array.from(board[row - 1]);\n    rowArr.splice(col - 1, 1);\n\n    const colArr = getColumn(board, col);\n    colArr.splice(row - 1, 1);\n\n    const boxArr = getBox(board, row, col);\n    const boxIndex = ((row - 1) % 3) * 3 + ((col - 1) % 3);\n    boxArr.splice(boxIndex, 1);\n\n    const forbiddenValues = (val) => Array.from(new Set(rowArr.concat(colArr).concat(boxArr))).every((x) => x !== val);\n\n    return options.filter(val => forbiddenValues(val));\n}","import { options } from './options.js';\n\nexport function removeValues(board, amount) {\n    const r = Math.floor(amount / 2);\n\n    // First remove tiles randomly\n    for (let i = 0; i < r; i++) {\n        removeRandomValue(board);\n    }\n\n    // Then remove the tile with fewest options\n    for (let i = 0; i < amount - r; i++) {\n        removeEasiestValue(board);\n    }\n}\n\nexport function removeValuesPerRow(board, amount) {\n    if (amount > 0 && amount < 9) {\n        for (let i = 1; i <= 9; i++) {\n            removeExistingValueFromRow(board, i)\n        }\n        removeValuesPerRow(board, amount - 1)\n    } else {\n        console.log(\"tried to remove too many values\")\n    }\n}\n\n// beacuse sudoku is valid, evry number exist only once in a row\nfunction removeExistingValueFromRow(board, row) {\n    const existingValues = board[row - 1].filter((val) => val !== 0);\n    if (existingValues.length > 0) {\n        const ri = Math.floor(Math.random() * existingValues.length); // random index\n        const colI = board[row - 1].indexOf(existingValues[ri])\n        board[row - 1][colI] = 0;\n    }\n}\n\nfunction removeRandomValue(board) {\n    const col = Math.floor(Math.random() * 9 + 1);\n    const row = Math.floor(Math.random() * 9 + 1);\n    removeValueFrom(board, row, col);\n}\n\nfunction removeEasiestValue(board) {\n\n    const copy = Array(9).fill(Array(9).fill(0));\n\n    for (let r = 1; r <= 9; r++) {\n        for (let c = 1; c <= 9; c++) {\n            if (board[r - 1][c - 1] !== 0) {\n                copy[r - 1][c - 1] = [r, c, options(board, r, c)];\n            }\n        }\n    }\n\n    const sorted = copy.flat().filter((x) => x !== 0)\n                      .sort((l, r) => l[2].length - r[2].length);\n    if (sorted[0]) {\n        const removable = sorted.filter((x) => x[2].length === sorted[0][2].length);\n        const rand = Math.floor(Math.random() * removable.length);\n        const toRemove = removable[rand];\n        removeValueFrom(board, toRemove[0], toRemove[1]);\n    }\n}\n\nfunction removeValueFrom(board, row, col) {\n    board[row - 1][col - 1] = 0;\n}","export function generate() {\n    return SudokuCreate(9, 0);\n}\n\nfunction SudokuCreate(maxNum, iterations) {\n    //generate number set\n    let numSet = [];\n    let sudokuArray = [];\n\n    //populates number set and files sudoku with the rows and columns it needs\n    for (let i = 1; i <= maxNum; ++i) {\n        numSet.push(i);\n        sudokuArray.push(new Array(maxNum));\n    }\n\n    //size of sub boxes, figure out more dynamic way to set this\n    let horizontalBoxSize = 3,\n        verticalBoxSize = maxNum === 9 ? 3 : 2;\n\n    //find random number from 0 to max number, expludes max\n    function getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n    }\n\n    //places numbers in the sudoku array\n    function placeNumber(num, arr) {\n        let lastRowIndex = arr.length - 1, //the index of the last row in the working array\n            lastRow = arr[lastRowIndex], //the reference to the last row\n            rowsToCheck = lastRowIndex % verticalBoxSize, //find what row of the sub box we are in vertically\n            safeIndexes = [], //find which column is save to put a number in to\n            randomSafeIndex; //pick one of the columns to place the number into from the safeIndexes array\n\n        //used to find a safe column to place the number in the current row\n        function findSafeIndex(boxesUsed) {\n            //looks at previous rows if inside the sub box to see if the current number can be placed in the sub box\n            function boxSafe(index) {\n                let indexBox = Math.floor(index / horizontalBoxSize);//finds which sub box the current index is in\n                if (boxesUsed.indexOf(indexBox) >= 0) {//checks to see if the current index's sub box has already been used\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n\n            //loop through the current row to find a safe place to put the number\n            for (let indexInLastRow = 0, rowLen = lastRow.length; indexInLastRow < rowLen; ++indexInLastRow) {\n                let columnSafe = true; //assume the current column is safe\n\n                //make sure the current number isn't already used in this column\n                for (let rowIndex = arr.length - 1; rowIndex >= 0; --rowIndex) {\n                    if(arr[rowIndex][indexInLastRow] === num) {\n                        columnSafe = false;\n                    }\n                }\n\n                //make sure current index is empty, column is safe, and that current box is safe\n                if(lastRow[indexInLastRow] === undefined && columnSafe && boxSafe(indexInLastRow)) {\n                    safeIndexes.push(indexInLastRow);\n                }\n            }\n\n            //return a safe index to be used for the current number\n            return safeIndexes[getRandomInt(safeIndexes.length)];\n        }\n\n        let horizontalBoxesUsed = []; //records which sub box has been used, in the current sub box row\n\n        //if we are not if the first row of the sub box, loop through the other rows to see which subboxes have been used\n        if (rowsToCheck > 0) {\n            for (let i = rowsToCheck; i > 0; --i) {\n                let horizontalBox = Math.floor(arr[lastRowIndex - i].indexOf(num) / horizontalBoxSize);\n                horizontalBoxesUsed.push( horizontalBox );\n            }\n        }\n\n        //get a safe index to put the number in to the row\n        randomSafeIndex = findSafeIndex(horizontalBoxesUsed);\n\n        //if there are no safe indexs return the number\n        if(randomSafeIndex === undefined) {\n            return num;\n        } else {//else if there are safe indexs add the number to an index in the row and return true\n            lastRow[randomSafeIndex] = num;\n            return true;\n        }\n    }\n\n    //loop through the numbers to set them in the sudoku\n    for (let i = numSet.length - 1; i >= 0; --i) {\n        let workingArray = [];//holds the rows we are currently working with and/or have already wored with\n        let possible = true;//is the sudoku even possible?\n        while (sudokuArray.length > 0) {//while there are rows in the sudokuArray have have been been processed keep looping\n            workingArray.push(sudokuArray.shift());//add a row to the working array from the sudoku array\n\n            possible = placeNumber(numSet[i], workingArray);//place the current working number in to the working array, to find out if the sudoku puzzle is possible\n\n            if (possible !== true) {//if its not possible generate a new sudoku puzzle\n                return SudokuCreate(maxNum, iterations + 1);\n            }\n        }\n\n        //make the sudoku array equal to the working array when we're done\n        sudokuArray = workingArray;\n    }\n\n    console.log(\"Sudoku created in \" + iterations + \" iterations\")\n    return sudokuArray;//return our array to start to do some sudoku\n}","import React from 'react';\nimport './Tile.css';\nimport './Note.css';\n\nclass Note extends React.Component {\n  constructor(props) {\n    super(props)\n    this.values = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  }\n\n  render() {\n    return (\n      <div className=\"note\">\n        {this.values.map((val) => {\n          if (this.props.notes.includes(val)) {\n            return <p className=\"noselect\">{val}</p>\n          } else {\n            return <p></p>\n          }\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Note;","import React from 'react';\nimport './Tile.css';\nimport Note from './Note'\n\nclass Tile extends React.Component {\n  constructor(props) {\n    console.log(\"tile constructed\")\n    super(props);\n    this.row = this.props.id[0]\n    this.col = this.props.id[1]\n    this.state = {\n      isStatic: this.props.static[this.row - 1][this.col - 1],\n      hover: false,\n      active: false,\n      focus: false,\n      pStyle: {\n        cursor: this.props.static[this.row - 1][this.col - 1] ? 'default' : 'pointer',\n        margin: 0,\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n    }\n  }\n\n  // Trying to implement hover and focus\n  toggleHover = () => {\n    this.setState({hover: !this.state.hover})\n  }\n\n  toggleActive = () => {\n    this.setState({active: !this.state.active})\n  }\n\n  toggleFocus = () => {\n    this.setState({focus: !this.state.focus})\n  }\n\n  renderHover = () => {\n    const hoverColor = 'rgb(22, 237, 245)'\n    if (this.state.isStatic) {\n      return {};\n    } else {\n      let linkStyle = {backgroundColor: this.props.style.backgroundColor};\n      if (this.state.hover) {\n        linkStyle = {backgroundColor: hoverColor}\n      } else if (this.state.active) {\n        linkStyle = {backgroundColor: hoverColor}\n      } else if (this.state.focus) {\n        linkStyle = {backgroundColor: hoverColor}\n      }\n      return linkStyle\n    }\n  }\n  \n  // Options bar to select tiles value\n  displayOptions = () => {\n    if (!this.state.isStatic) {\n      this.props.onDisplayOptions(this.props.id, this.props.isSelected)\n    }\n  }\n\n  confiqClassName() {\n    if (this.state.isStatic || this.props.value === 0) {\n      return 'tile'\n    } else {\n      return 'tile ' + this.props.class\n    }\n  }\n\n  render() {\n    if (this.row === 1 && this.col === 1) {\n      console.log(\"tile render\");\n    }\n\n    const inside = () => {\n      if (this.props.enableNotes && this.props.value === 0) {\n        return (\n          <Note id={this.props.id} notes={this.props.notes}/>\n        )\n      } else {\n        return (\n          <p className=\"noselect\" style={this.state.pStyle}>{\n            this.props.value === 0 ? '' : this.props.value\n          }</p>\n        )\n      }\n    }\n\n    return (\n      <div \n        className={this.confiqClassName()}\n        onClick={this.displayOptions}\n        // combinign two style objects into a new empty object\n        style={Object.assign({}, this.props.style, this.renderHover())}\n        onMouseOver={this.toggleHover} \n        onMouseOut={this.toggleHover} \n        onMouseUp={this.toggleActive} \n        onMouseDown={this.toggleActive} \n        onFocus={this.toggleFocus}>\n        { inside() }\n      </div>\n    )\n  }\n}\n\nexport default Tile;","import React from 'react';\nimport './ButtonTile.css';\nimport './Tile.css';\n\nclass ButtonTile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.value = this.props.value;\n        this.pStyle = {\n            cursor: 'pointer',\n            margin: 0,\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)'\n        }\n        this.state = {\n            hover: false,\n            style: {\n                width: `${this.props.size}px`,\n                height: `${this.props.size}px`,\n                borderRadius: '3px'\n            }\n        }\n    }\n\n    toggleHover = () => {\n        this.setState({hover: !this.state.hover})\n    }\n\n    renderHover = () => {\n        let linkStyle = this.props.color;\n        if (this.state.hover) {\n          linkStyle = {backgroundColor: 'white', color: 'black'}\n        }\n        return linkStyle\n    }\n\n    button = () => (\n        <div\n        onClick={this.setValue}\n        className=\"tile-button\"\n        style={Object.assign({}, this.state.style, this.renderHover())}\n        onMouseOver={this.toggleHover} \n        onMouseOut={this.toggleHover} \n        onMouseUp={this.toggleHover} \n        onMouseDown={this.toggleHover} \n        onFocus={this.toggleHover}>\n            <p className=\"noselect\" style={this.pStyle}>{this.value}</p>\n        </div>\n    );\n\n    setValue = () => {\n        this.props.setValue(this.value, this.props.selected)\n    }\n\n    render() {\n        return this.button()\n    }\n}\n\nexport default ButtonTile;","import React from 'react';\nimport ButtonTile from './ButtonTile';\n\nclass OptionsRow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.style = {\n            margin: '15px auto 0 auto',\n            backgroundColor: 'rgb(255, 255, 255)',\n            width: `${this.props.tileSize * 9 + 2}px`,\n            height: `${this.props.tileSize + 2}px`,\n            border: '1px white solid'\n        }\n    }\n\n    setValue = (value, selected) => {\n        this.props.setValue(value, selected)\n    }\n\n    figureTileColor = (val) => {\n        const selectedIsNull = this.props.selectedValue === 0\n        const isNote = this.props.selectedNotes.includes(val);\n        return isNote && selectedIsNull ? 'rgb(22, 237, 245)' : '';\n    }\n\n    render() {\n        let id = 0;\n        return (\n            <div style={this.style}>{\n                this.props.tiles.map((num) => {\n                    if (id === 9) id = 0;\n                    id++;\n                    return (\n                    <ButtonTile\n                    id={[this.props.id, id]}\n                    key={[this.props.id, id]}\n                    selected={this.props.selected}\n                    selectedValue={this.props.selectedValue}\n                    color={{backgroundColor: this.figureTileColor(id)}}\n                    value={num}\n                    setValue={this.setValue}\n                    size={this.props.tileSize}/>\n                )})\n            }\n            </div>\n        )\n    }\n}\n\nexport default OptionsRow;","import React from 'react';\nimport { setBoard } from '../scripts/difficulty';\nimport Tile from './Tile';\nimport OptionsRow from './OptionsRow';\nimport './Board.css';\nimport { isFilled, tileIsValid, isValid } from '../scripts/check.js';\n\nimport noteIcon from '../assets/img/notes.png';\n\nclass Board extends React.Component {\n    constructor(props) {\n        console.log(\"Board constructed!\")\n        super(props);\n        this.board = setBoard(this.props.difficulty);\n        this.static = this.mapStaticBoard(this.board);\n        this.state = {\n            tiles: this.board,\n            notes: this.board.map((row) => row.map((val) => [])),\n            selected: [0, 0],\n            incorrectTiles : [],\n            showOptions: false,\n            writingNotes: false,\n            size: 30 //px\n        }\n        this.init()\n    }\n\n    init() {\n        // check initially if game happens to be correct\n        this.props.setGameState(isValid(this.state.tiles), isFilled(this.state.tiles))\n    }\n\n    mapStaticBoard = (arr) => {\n        const newArr = arr.map((row) => row.map((val) => val !== 0));\n        return newArr;\n    }\n\n    toggleNoteWrite = () => {\n        this.setState({ writingNotes: !this.state.writingNotes })\n    }\n\n    // double click sets value to 0\n    displayOptions = (id, isSelected) => {\n        this.setState({\n            showOptions: !isSelected,\n            selected: id\n        }, () => {\n            if (isSelected) {\n                this.setValue(0, id);\n            }\n        })\n    }\n\n    setValue = (value, tile) => {\n        if (!this.isSelected(0, 0)) {\n            if (this.state.writingNotes) {\n                const newNotes = this.state.notes;\n                const prevNotes = this.state.notes[tile[0] - 1][tile[1] - 1];\n                if (prevNotes.includes(value)) {\n                    newNotes[tile[0] - 1][tile[1] - 1].splice(prevNotes.indexOf(value), 1);\n                } else {\n                    newNotes[tile[0] - 1][tile[1] - 1].push(value);\n                }\n                this.setState({notes: newNotes})\n            } else {\n                const newBoard = this.state.tiles;\n                newBoard[tile[0] - 1][tile[1] - 1] = value;\n                this.setState({\n                    showOptions: false,\n                    selected: [0, 0],\n                    tiles: newBoard\n                }, () => {\n                    this.check(tile)\n                })\n            }\n        }\n    }\n\n    check() {\n        const correct = this.checkAllTiles()\n        const filled = isFilled(this.state.tiles)\n        this.props.setGameState(correct, filled)\n    }\n\n    checkAllTiles() {\n        let correct = true;\n        for (let row = 1; row <= 9; row++) {\n            for (let col = 1; col <= 9; col++) {\n                if (!this.static[row - 1][col - 1] \n                &&   this.state.tiles[row - 1][col - 1] !== 0) {\n\n                    const isOK = this.checkTile([row, col])\n                    if (!isOK) correct = isOK\n                }\n            }\n        }\n        return correct;\n    }\n\n    checkTile(tile) {\n        const isOK = tileIsValid(this.state.tiles, tile[0], tile[1])\n        this.updateIncorrectTiles(tile, !isOK)\n        return isOK;\n    }\n\n    updateIncorrectTiles(tile, push) {\n        const index = this.incorrectIndex(tile[0], tile[1])\n        if (push) {\n            if (index === -1) {\n                this.state.incorrectTiles.push(tile)\n            }\n        } else {\n            if (index !== -1) {\n                this.state.incorrectTiles.splice(index, 1)\n            }\n        }\n    }\n\n    // returns -1 if is not in incorrect tiles\n    incorrectIndex(row, col) {\n        return this.state.incorrectTiles.findIndex((x) => x[0] === row && x[1] === col)\n    }\n\n    isSelected(row, col) {\n        return this.state.selected[0] === row && this.state.selected[1] === col\n    }\n\n    confiqColor(row, col) {\n        const selectedColor = () => this.isSelected(row, col) ? 'rgb(22, 237, 245)' : '' // no property\n        const staticColor = () => this.static[row - 1][col - 1] ? 'rgb(230, 230, 230)' : selectedColor()\n        return staticColor()\n    }\n\n    confiqHelperClass(row, col) {\n        if (this.props.tileHelper) {\n            return this.incorrectIndex(row, col) === -1 ? 'correct-tile' : 'incorrect-tile'\n        } else {\n            return '';\n        }\n    }\n\n    confiqBorders(row, col) {\n        const top = row % 3 === 1 ? 'black' : '#ccc'\n        const right = col % 3 === 0 ? 'black' : '#ccc'\n        const bottom = row % 3 === 0 ? 'black' : '#ccc'\n        const left = col % 3 === 1 ? 'black' : '#ccc'\n        const borderObj = {\n            borderWidth: '1px',\n            borderStyle:  'solid',\n            borderColor:  `${top} ${right} ${bottom} ${left}`\n        }\n        return borderObj\n    }\n\n    getTileStyle(row, col) {\n        const style = {\n            backgroundColor: this.confiqColor(row, col),\n            cursor: this.static[row - 1][col - 1] ? 'default' : 'pointer',\n            width: `${this.state.size}px`,\n            height: `${this.state.size}px`,\n        }\n        return Object.assign(style, this.confiqBorders(row, col));\n    }\n  \n    render() {\n        console.log(\"board render\")\n        let row = 1;\n        let col = 0;\n        const board = (\n            <div id=\"board\" style={this.style}> {\n                this.state.tiles.flat().map((value) => {\n                    if (col === 9) {\n                        col = 0;\n                        row++;\n                    }\n                    col++;\n                    return (\n                        <Tile \n                        id={[row, col]}\n                        key={[row, col]}\n                        class={this.confiqHelperClass(row, col)}\n                        style={this.getTileStyle(row, col)}\n                        static={this.static}\n                        isSelected={this.isSelected(row, col)}\n                        onDisplayOptions={this.displayOptions}\n                        enableNotes={this.props.enableNotes}\n                        notes={this.state.notes[row - 1][col - 1]}\n                        value={value}\n                        tileSize={this.state.size}/>\n                    )\n                })\n            }</div>\n        )\n        const options = () => {\n            if (this.state.writingNotes || this.state.showOptions) {\n                const notes = () => this.state.selected[0] !== 0 ? this.state.notes[this.state.selected[0] - 1][this.state.selected[1] - 1] : [];\n                const selectedVal = () => this.state.selected[0] !== 0 ? this.state.tiles[this.state.selected[0] - 1][this.state.selected[1] - 1] : null;\n                return (\n                    <div>\n                        <OptionsRow\n                        id={10}\n                        key={10}\n                        setValue={this.setValue}\n                        selected={this.state.selected}\n                        selectedValue={selectedVal()}\n                        selectedNotes={notes()}\n                        writingNotes={this.state.writingNotes}\n                        tiles={[1, 2, 3, 4, 5, 6, 7, 8, 9]}\n                        tileSize={this.state.size} />\n                    </div>\n                )\n            }\n        }\n\n        const notesButton = () => {\n            const color = () => this.state.writingNotes ? {backgroundColor: 'rgb(22, 237, 245)'} : {backgroundColor: 'white'}\n            if (this.props.enableNotes) {\n                return (\n                    <button style={Object.assign({}, {position: 'relative', top: '0', width: '30px', height: '30px'}, color())}\n                        onClick={this.toggleNoteWrite}>\n                        <img src={noteIcon} style={{width: '100%'}} alt=\"Notes\" />\n                    </button>\n                )\n            }\n        }\n\n        const buttonRow = () => {\n\n            return (\n                <div id=\"button-row\" style={{height: '30px'}}>\n                    {notesButton()}\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                {buttonRow()}\n                {board}\n                {options()}\n            </div>\n        )\n    }\n}\n\nexport default Board;\n","import { removeValues, removeValuesPerRow } from './emptyTiles';\nimport { generate } from './generator';\n\nexport function setBoard(difficulty) {\n    console.log(`Started ${difficulty} game`)\n\n    const board = generate();\n\n    removeValuesPerRow(board, 2);\n    \n    switch (difficulty) {\n        case 'easy':\n            break;\n        case 'medium':\n            removeValuesPerRow(board, 1);\n            removeValues(board, 10);\n            break;\n        case 'hard':\n            removeValues(board, 35);\n            break;\n        case 'extreme':\n            removeValues(board, 50);\n            break;\n        default:\n            break;\n    }\n    \n    return board;\n}","import React from 'react';\nimport '../App.css';\nimport Board from './Board';\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isCorrect: true,\n          isFilled: false,\n          isCompleted: false,\n          difficulty: this.props.difficulty\n        }\n        this.headerStyle = {\n          color: 'white',\n          textAlign: \"center\"\n        }\n    }\n\n    setGameState= (isCorrect, isFilled) => {\n        this.setState({\n            isCorrect: isCorrect,\n            isFilled: isFilled\n        }, () => {\n            this.setState({\n                isCompleted: this.state.isCorrect && this.state.isFilled\n            })\n        })\n    }\n\n    gameStyle = () => {\n        if (this.state.isFilled) {\n            if (this.state.isCompleted) {\n                return {background: 'green'}\n            } else {\n                return {background: 'red'}\n            }\n        } else {\n            return\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"sudoku-game\" style={this.gameStyle()}>\n                <h1 style={this.headerStyle}>\n                    {this.state.isFilled ? (this.state.isCompleted ? 'Completed!' : 'Try again!') : 'Sudoku'}\n                </h1>\n                <Board \n                tileHelper={this.props.tileHelper}\n                enableNotes={this.props.enableNotes}\n                difficulty= {this.props.difficulty}\n                setGameState={this.setGameState}/>\n            </div>\n        )\n    }\n}\n\nexport default Game;","import React from 'react';\nimport './App.css';\nimport GameSelect from './components/GameSelect';\nimport Game from './components/Game';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tileHelper: false,\n      enableNotes: false,\n      gameStarted: false,\n      difficulty: 'init', \n    }\n  }\n\n  /* problem migth be that this doesn't actually start the game but\n  *  changes app state\n  *  \n  */\n  startGame = (difficulty) => {\n    this.setState({\n      gameStarted: true,\n      difficulty: difficulty\n    })\n  }\n\n  toggleEnableNotes = () => {\n    const state = this.state.enableNotes\n    this.setState({enableNotes: !state})\n  }\n\n  toggleTileHelper = () => {\n    const state = this.state.tileHelper\n    this.setState({tileHelper: !state})\n  }\n  \n  render() {\n    if (this.state.gameStarted) {\n      return (\n        <div id=\"app\">\n          <div id=\"settings\">\n            Tile Helper: <input type=\"checkbox\" id=\"tile-helper\"  onClick={this.toggleTileHelper}/>\n            Enable notes: <input type=\"checkbox\" id=\"enable-notes\"  onClick={this.toggleEnableNotes}/>\n          </div>\n          <Game\n          tileHelper={this.state.tileHelper}\n          enableNotes={this.state.enableNotes}\n          difficulty={this.state.difficulty}/>\n        </div>\n      )\n    } else {\n      return (\n        <div id=\"app\">\n          <GameSelect \n          startGame={this.startGame}/>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\napplyFullWindowHeight();\n\nfunction applyFullWindowHeight() {\n    const vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n    window.addEventListener('resize', () => {\n      const vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty('--vh', `${vh}px`);\n    });\n}\n"],"sourceRoot":""}